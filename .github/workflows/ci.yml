name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  NODE_FLAGS: --max_old_space_size=4096

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Build
        run: |
          rm -rf dist
          node build-scripts build
        env:
          SCOREBOARD_SERVER: ${{ secrets.SCOREBOARD_SERVER }}
      - name: Checks
        run: node build-scripts pre-deploy
      - name: Deploy
        run: |
          if git log --format=%B -n 1 | egrep '^:bookmark: v[0-9]+\.[0-9]+\.[0-9]+'
          then
            if [ -n "$GH_APP_CREDENTIALS_TOKEN" ]
            then
              GH_TOKEN="$(npx obtain-github-app-installation-access-token ci $GH_APP_CREDENTIALS_TOKEN)"
              echo "::add-mask::$GH_TOKEN"
              git remote add www https://akibot:$GH_TOKEN@github.com/bemusic/bemusic.github.io.git
              git config --global user.email "aki@spacet.me"
              git config --global user.name "Aki running on GitHub Actions"
              node build-scripts deploy
            else
              echo "GH_APP_CREDENTIALS_TOKEN is not set, skipped"
            fi
          else
            echo 'Not a release commit, skipped!'
          fi
        env:
          GH_APP_CREDENTIALS_TOKEN: ${{ secrets.GH_APP_CREDENTIALS_TOKEN }}
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: bemuse-build-${{ github.sha }}
          path: dist
  e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: bemuse-build-${{ github.sha }}
          path: dist
      - name: Install browsers
        run: |
          cd e2e
          npx playwright install --with-deps
      - name: Run E2E tests
        run: |
          cd e2e
          npx playwright test
      - name: Upload test report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: e2e/playwright-report
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Build dependencies
        run: node common/scripts/install-run-rush.js build --to-except bemuse
      - name: Typecheck
        run: node ../common/scripts/install-run-rushx.js typecheck
        working-directory: bemuse
  tidy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Build
        run: node common/scripts/install-run-rush.js build --to-except bemuse
      - name: Lint and fix all auto-fixable problems
        run: node common/scripts/install-run-rush.js lint --fix --verbose
        if: always()
      - name: Make sure all source files are formatted using Prettier
        run: node common/scripts/install-run-rush.js format-all
        if: always()
      - name: Semgrep
        uses: ./.github/actions/semgrep
        if: always()
      - name: Format README file
        run: node common/scripts/install-run-rush.js format-readme
        if: always()
      - run: git add --update
        if: always()
      - uses: dtinth/patch-generator-action@main
        if: always()
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Build
        run: node common/scripts/install-run-rush.js build --to-except bemuse
      - name: Test
        run: node ../common/scripts/install-run-rushx.js test
        working-directory: bemuse
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  test_packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up project
        uses: ./.github/actions/setup-project
      - name: Build
        run: node common/scripts/install-run-rush.js build --to-except bemuse
      - name: Test Packages
        run: node common/scripts/install-run-rush.js test --to-except bemuse
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
